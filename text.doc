Здравствуйте, Андрей Александрович,

Спасибо за отклик на вакансию Junior+ Python разработчик в Компанию СТАРТЕКС. Еще раз отмечу, что мы ищем сотрудника, который будет доступен с 10 до 19ч по Новосибирску. Если Вам это подходит, то прошу выполнить тестовое задание.
Решение ожидаю получить в течение 7 дней. Напишите мне, если не успеваете. Также приветствуется ссылка на профиль на GitHub, Gitlab - будет Вашим преимуществом среди других кандидатов. По организационным и любым другим рабочим вопросам можете написать в ответном письме.

=================================
Тестовое задание состоит из трех задач. Область - то, с чем мы работаем постоянно.

Общие требования к выполнению заданий:
- Код в репозитории на GitHub, Gitlab, etc.
- Список всех зависимостей должен храниться в requirements.txt, соответственно можно установить их командой pip install -r requirements.txt.
- Разработка должна вестись в virtualenv, но сама директория с virtualenv должна быть добавлена в .gitignore.
- При выполнении тестового задания Вы можете дополнительно использовать сторонние Python библиотеки, без всяких ограничений. Все 3rd party Python библиотеки должны быть добавлены в проект через pip.
- Обязательна валидация входных данных.
- Использовать логирование.
- Реализованные тесты будут преимуществом.
- Если какая-то область Вам не знакома - отметьте это в сопроводительном к решению письме.

Технические требования
- Django 1.9+ / Django REST framework
- PostgreSQL 9.6+
- Python 3.7+

#1. Интернет-магазин.
Написать простой интернет-магазин.
Либо бэкенд + готовый набор скриптов для теста API (Postman и аналогичные), либо бэкенд + фронтенд любым способом.
Модели (типы полей выбрать из представляемых фреймворком):
- Учетные записи пользователей: ФИО, адрес доставки, email (он же логин), пароль, роль.
- Роли пользователей: клиент, менеджер.
- Товары: артикул (текст), наименование, цена закуп, цена розница.
- Корзина: клиент, товар, количество, цена, сумма по строке.

Интерфейсы:
- авторизация
- добавление товаров в корзину

Особенности:
- управление учетками и товарами - через Django админку.
- корзина доступна на просмотр и редактирование только клиенту-владельцу и любому менеджеру.
- у клиента может быть только одна активная корзина.

#2. Интеграция с внешним поставщиком
Написать скрипт, который загрузит файл с товарами поставщика в наш интернет-магазин.
Файл https://gist.github.com/Wanderernk/1f3af500435bef872af2b6f3cc8e79fc

Сопоставление полей:
- Артикул = "ПТ"+"КодТовараПоставщика"
- Наименование товара = "НаименованиеТовараПоставщика"
- Цена закуп = 0.9 * "ЦенаПоставщика"
- Цена розница = если "ЦенаПоставщика" < 1000 руб, то 1.2 * "ЦенаПоставщика". иначе 1.1 * "ЦенаПоставщика"

#3 Печать сопроводительных документов (по желанию)
Требования:
- асинхронно через Celery
- поля (по одному на строку): Клиент, Номер заказа, Адрес доставки.
- на выходе должен быть PDF файл в каталоге, предназначенном для хранения этих файлов.
- использовать wkhtmltopdf.

С наилучшими пожеланиями,
Казачков Ян
Руководитель отдела разработки ПО
Компания СТАРТЕКС